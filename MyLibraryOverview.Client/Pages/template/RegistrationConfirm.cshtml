@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@using Microsoft.AspNetCore.Components.Services;
@using Microsoft.AspNetCore.Components;

@inject IUriHelper UriHelper
@inject HttpClient Http

@page "/Registration/NewUser"


<h1>Account confirm:</h1>
<p>Please open your email and click on the URL to verify your account. If URL is invalid, contact us on <a href='mailto:salim.mayaleh@gmail.com'>salim.mayaleh@gmail.com</a></p>

@if (IsDoneRequest)
{
    @if (IsSuccess)
    {

        <div class="alert alert-success" role="alert">
            <div class="text-right">
                <p>Your new account has been successfully verified.</p>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-danger" role="alert">
            <div class="text-right">
                <p>Invalid token. Could not verify your account.</p>
            </div>
        </div>
    }

    <a href="/">Back to homepage</a>
}
else
{
    <div class="mx-auto text-center center" style="width: 300px; margin-top:300px;">
        <div class="spinner-grow text-primary" role="status">
            <span class="sr-only">.</span>
        </div>
        <div class="spinner-grow text-secondary" role="status">
            <span class="sr-only"></span>
        </div>
        <div class="spinner-grow text-success" role="status">
            <span class="sr-only"></span>
        </div>
        <div class="spinner-grow text-danger" role="status">
            <span class="sr-only"></span>
        </div>
        <div class="spinner-grow text-warning" role="status">
            <span class="sr-only"></span>
        </div>
        <div class="spinner-grow text-info" role="status">
            <span class="sr-only"></span>
        </div>
        <div class="spinner-grow text-dark" role="status">
            <span class="sr-only">Loading...</span>
        </div>

        <div class="text-center center">
            <h1>Verifying...</h1>
        </div>
    </div>
}







@functions{

    string UserId;
    string Code;

    bool IsSuccess = false;

    bool IsDoneRequest = false;

    protected override async Task OnInitAsync()
    {
        this.getUrlParams();

        if (!string.IsNullOrEmpty(UserId) && !string.IsNullOrEmpty(Code))
        {
            //sernd init asHttpynch to confirm account
            var result = await Http.SendJsonAsync<string>(HttpMethod.Post, "/api/registration/confirmAccount", new { UserId = UserId, Code = Code });

            if (result == "Success")
            {
                IsSuccess = true;
            }
        }

        IsDoneRequest = true;


        //return base.OnInitAsync();
    }

    private void getUrlParams()
    {
        var uri = new Uri(UriHelper.GetAbsoluteUri());
        UserId = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query).TryGetValue("userId", out var type) ? type.First() : "";
        Code = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query).TryGetValue("code", out var typeC) ? typeC.First() : "";
    }
}
