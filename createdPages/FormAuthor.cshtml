@page "/form-author"
@using PersonalLibrary.Shared

@inject HttpClient Http
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper

<SurveyPrompt Title="New Author" />

<div class="row">

    <div class="col-4">
        <h2>Adding new Author or Book Writter:</h2>
        <p>Please fill at least Author Name.</p>
    </div>

    <div class="col-4">
        <div class="form-group">
            <label for="nameAuthor">Author Name:</label>
            <input bind="@formAuthor.Name" type="text" class="form-control is-valid" id="nameAuthor" aria-describedby="nameHelp" placeholder="name" required />
            <small id="nameHelp" class="form-text text-muted">Everyone has at least name.</small>
            <!--
    <div class="valid-feedback">
        Looks good!
    </div>
    -->
            <div class="invalid-feedback">
                Please fill name.
            </div>
            @if (IsInvalidName)
            {
                <span class="small form-text text-danger">Please fill this!</span>
            }
        </div>
    </div>

    <div class="col-4">

        <div class="form-group">
            <label for="aboutAuthor">About Author</label>
            <textarea bind="@formAuthor.About" class="form-control" id="aboutAuthor" aria-describedby="aboutHelp" placeholder="about" rows="3"></textarea>
            <small id="aboutHelp" class="form-text text-muted">For example copy some text about the author from wiki and paste it there</small>
        </div>
    </div>
</div>
@if (CanClickSave)
{

    <button onclick="@AddAuthor" class="btn btn-primary">Add Author</button>
}
else
{
    <div class="text-center">
        <div class="spinner-border" role="status">
            <span class="sr-only">Processing...</span>
        </div>
    </div>
}

@if (_newName != "")
{
    <div class="alert alert-success" role="alert">
        New Author added: <b>@_newName</b>
    </div>

}

@functions {
    private string _newName = "";

    Author formAuthor = new Author();
    bool CanClickSave = true;
    bool IsInvalidName = false;
    //protected override void OnInit()
    protected void AddAuthor()
    {
        if(string.IsNullOrEmpty(formAuthor.Name))
        {
            IsInvalidName = true;
            return;
        }
        IsInvalidName = false;
        CanClickSave = false;
        Http.SendJsonAsync(HttpMethod.Post, "/api/mylibrary/addAuthor", formAuthor);
        _newName = formAuthor.Name;
        formAuthor.Name = null;
        formAuthor.About = null;
        CanClickSave = true;

        //UriHelper.NavigateTo("/form-author");
    }
}