@page "/all-authors"
@using PersonalLibrary.Shared

@inject HttpClient Http
@inject IUriHelper UriHelper

@if (string.IsNullOrEmpty(Storage.GetItem("useraccessparam")))
{
    UriHelper.NavigateTo("/sign-in");
}

<h1>All Authors</h1>

<p>
    <NavLink href="form-author" Match=NavLinkMatch.All>
        <button class="btn btn-primary">
            <span class="oi oi-plus"></span>
            Add Author
        </button>
    </NavLink>
</p>

@if (authors == null)
{
    <div class="text-center">
        <div class="spinner-border" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
}
else
{
    <div class="row">

    </div>
    <table class="table">
        <thead>
            <tr>
                <th>Author Name</th>
                <th>About Author</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var author in authors)
            {
                <tr>
                    <td><a href="#">@author.Name</a></td>
                    <td><a href="#">@author.About</a></td>
                    <td><a class="btn btn-success" href="/edit-author/@author.Authorid">Edit</a> | <a class="btn btn-danger" href="/delete-author/@author.Authorid">Delete</a></td>
                </tr>
            }
        </tbody>
    </table>
}

@functions {
/* ukazka, jak nastavit componente parametr: */
/*
[Parameter]
private string Title { get; set; }
*/

Author[] authors;
/*
 * Volani api server
 */
protected override async Task OnInitAsync()
{

    //books = await Http.GetJsonAsync<Book[]>("sample-data/books.json");
    //Storage["useraccessparam"];
    Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", Storage["useraccessparam"]);
    authors = await Http.GetJsonAsync<Author[]>("api/mylibrary/getAuthors");
}
}
