@page "/book/detail/{BookIdString}"
@using PersonalLibrary.Shared
@inject HttpClient Http
@inject IUriHelper UriHelper
@if (string.IsNullOrEmpty(Storage.GetItem("useraccessparam")))
{
    UriHelper.NavigateTo("/sign-in");
}



<div class="row">

    @if (_isError && _isLoaded)
    {
        <div class="alert alert-danger" role="alert">
            <h1 class="alert-heading">Ups, the book you are looking for does not exist!</h1>
            <p>Something is wrong...</p>
            <hr>
            <p class="mb-0">Go back.</p>
        </div>
    }

    @if (!_isError && !_isLoaded)
    {
        
        <div class="text-center">
            <p>Loading...</p>
            <div class="spinner-border" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
    }



    @if (!_isError && _isLoaded)
    {

        <div class="card">
            <h1 class="card-header">@BookDetails.Name - @BookDetails.Author.Name</h1>
            <div class="card-body">
                <p>Read: <span class="badge badge-success">True</span>/<span class="badge badge-secondary">False</span></p>
                <h2 class="card-title">About @BookDetails.Name</h2>
                <p class="card-text">@BookDetails.About</p>

                <h3 class="card-title">About @BookDetails.Author.Name</h3>
                <p class="card-text">@BookDetails.Author.About</p>
                <h4>Author's books:</h4>
                <ul>
                    <li>some</li>
                </ul>
            </div>
        </div>
    }





</div>


@functions{
    [Parameter]
    string BookIdString { get; set; }

    Book BookDetails { get; set; }

    private bool _isError = false;
    private bool _isLoaded = false;

    protected override void OnInit()
    {
        Console.WriteLine(BookIdString);
    }

    protected override async Task OnInitAsync()
    {
        Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", Storage["useraccessparam"]);
        BookDetails = await Http.GetJsonAsync<Book>("/api/mylibrary/bookDetail/" + Convert.ToInt32(BookIdString));
        _isLoaded = true;
        if(BookDetails == null)
        {
            _isError = true;
        }
    }
}
