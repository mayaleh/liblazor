@using Cloudcrate.AspNetCore.Blazor.Browser.Storage;
@inject LocalStorage Storage
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper
@inject AppState State
@*
    <div class="top-row pl-4 navbar navbar-dark">
        <a class="navbar-brand" href="">PersonalLibrary</a>
        <button class="navbar-toggler" onclick=@ToggleNavMenu>
            <span class="oi oi-grid-three-up" aria-hidden="true"></span>
        </button>
    </div>
*@



<div class="pos-f-t">
    <nav class="navbar navbar-dark bg-mayaleh">
        <button onclick="@RefreshThisCompo" class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarToggleExternalContent" aria-controls="navbarToggleExternalContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <form class="form-inline my-2 my-lg-0">
            @if (State.IsLoggedIn)
            {

                @if (!string.IsNullOrEmpty(Storage.GetItem("username")))
                {
                    <span class="username text-white">@Storage.GetItem("username")</span>
                }
                <button onclick="@SignOut" class="btn btn-warning ml-md-auto">
                    <span class="oi oi-account-logout"></span>
                    Sign out
                </button>
            }
            else
            {
                <NavLink class="btn btn-info ml-md-auto" href="sign-in" Match=NavLinkMatch.All>
                    <span class="oi oi-account-login"></span>
                    Sign in
                </NavLink>
            }
        </form>
    </nav>
    <div class="collapse" id="navbarToggleExternalContent">
        <div class="bg-mayaleh p-4">
            <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
                <li>
                    <NavLink href="" Match=NavLinkMatch.All>
                        <span class="oi oi-home" aria-hidden="true"></span> Home
                    </NavLink>
                </li>
                <li>
                    <NavLink href="public/books" Match=NavLinkMatch.All>
                        <span class="oi oi-book" aria-hidden="true"></span> All Books
                    </NavLink>
                </li>
                @if (State.IsLoggedIn)
                {
                    <li>
                        <NavLink href="my-library" Match=NavLinkMatch.All>
                            <span class="oi oi-vertical-align-bottom" aria-hidden="true"></span> My Library
                        </NavLink>
                    </li>
                    <li>
                        <NavLink href="all-authors" Match=NavLinkMatch.All>
                            <span class="oi oi-people" aria-hidden="true"></span> Authors
                        </NavLink>
                    </li>
                    <li>
                        <NavLink href="soon/books-manage" Match=NavLinkMatch.All>
                            <span class="oi oi-fork" aria-hidden="true"></span> early preview of Manage
                        </NavLink>
                    </li>
                }
            </ul>

        </div>
    </div>
</div>




@functions {

    [Parameter]
    protected bool UserChanged { get; set; }

    [Parameter]
    private Action<bool> UserChangedChanged { get; set; }

    bool collapseNavMenu = true;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        Console.WriteLine("Nav menu state has changed");
        StateHasChanged();
    }



    protected override void OnInit()
    {
        StateHasChanged();
    }


    protected void RefreshThisCompo()
    {
        StateHasChanged();
    }

    protected void SignOut()
    {
        State.Logout();
    }


}
