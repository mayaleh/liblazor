#pragma checksum "C:\Users\Salim Mayaleh\source\repos\PersonalLibrary\PersonalLibrary.Client\Pages\FormBook.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "eac8aeb22526c4b5375a6c0dfcd41963bfd22d94"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace PersonalLibrary.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Blazor;
    using Microsoft.AspNetCore.Blazor.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Blazor.Layouts;
    using Microsoft.AspNetCore.Blazor.Routing;
    using Microsoft.JSInterop;
    using PersonalLibrary.Client;
    using PersonalLibrary.Client.Shared;
    using PersonalLibrary.Shared;
    [Microsoft.AspNetCore.Blazor.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Blazor.Components.RouteAttribute("/form-book")]
    public class FormBook : Microsoft.AspNetCore.Blazor.Components.BlazorComponent
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Blazor.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 104 "C:\Users\Salim Mayaleh\source\repos\PersonalLibrary\PersonalLibrary.Client\Pages\FormBook.cshtml"
            
    private string _newName = "";

    Book formBook = new Book()
    {
        Author = new Author()
    };

    bool CanClickSave = true;
    bool IsInvalidName = false;
    //protected override void OnInit() //synch call

    bool isLoaded = false;

    [Parameter]
    bool IsEdit { get; set; } = false;

    [Parameter]
    int BookId { get; set; }

    string nadpis = "";

    protected override async Task OnInitAsync()
    {
        if (IsEdit)
        {
            nadpis = "Editing book";
            formBook = await Http.GetJsonAsync<Book>("/api/mylibrary/bookDetail/" + Convert.ToInt32(BookId));
            isLoaded = true;
        }
        else
        {
            nadpis = "Adding new book";
        }

    }
    
    protected void AddBook()
    {
        if (IsEdit)
        {
            return;
        }
        if (string.IsNullOrEmpty(formBook.Name))
        {
            IsInvalidName = true;
            return;
        }
        IsInvalidName = false;
        CanClickSave = false;
        Http.SendJsonAsync(HttpMethod.Post, "/api/mylibrary/addBook", formBook);
        _newName = formBook.Name;
        formBook.Name = null;
        formBook.About = null;
        formBook.Place = null;
        formBook.Author.Name = null;
        CanClickSave = true;

        //UriHelper.NavigateTo("/form-author");
    }

    protected void EditBook()
    {
        if (string.IsNullOrEmpty(formBook.Name))
        {
            IsInvalidName = true;
            return;
        }
        IsInvalidName = false;
        CanClickSave = false;
        Http.SendJsonAsync(HttpMethod.Post, "/api/mylibrary/editBook", formBook);
        _newName = formBook.Name;
        formBook = null;
        CanClickSave = true;
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper { get; set; }
        [global::Microsoft.AspNetCore.Blazor.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
